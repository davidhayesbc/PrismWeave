{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":4,"numPassedTests":120,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":4,"numTotalTests":120,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1759620652925,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["FileManager","Filename Generation"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Filename Generation should generate filename with date, domain, and title","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should generate filename with date, domain, and title"},{"ancestorTitles":["FileManager","Filename Generation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Filename Generation should sanitize title properly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should sanitize title properly"},{"ancestorTitles":["FileManager","Filename Generation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Filename Generation should limit title length appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should limit title length appropriately"},{"ancestorTitles":["FileManager","Filename Generation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Filename Generation should handle URLs with subdomains","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle URLs with subdomains"},{"ancestorTitles":["FileManager","Filename Generation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Filename Generation should remove www prefix from domain","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should remove www prefix from domain"},{"ancestorTitles":["FileManager","Folder Determination"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Folder Determination should classify tech content correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should classify tech content correctly"},{"ancestorTitles":["FileManager","Folder Determination"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Folder Determination should classify business content","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should classify business content"},{"ancestorTitles":["FileManager","Folder Determination"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Folder Determination should classify tutorial content","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should classify tutorial content"},{"ancestorTitles":["FileManager","Folder Determination"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Folder Determination should classify news content","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should classify news content"},{"ancestorTitles":["FileManager","Folder Determination"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Folder Determination should classify research content","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should classify research content"},{"ancestorTitles":["FileManager","Folder Determination"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Folder Determination should classify design content","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should classify design content"},{"ancestorTitles":["FileManager","Folder Determination"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Folder Determination should fallback to unsorted for truly unknown content","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should fallback to unsorted for truly unknown content"},{"ancestorTitles":["FileManager","Folder Determination"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Folder Determination should score folders based on keyword frequency","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should score folders based on keyword frequency"},{"ancestorTitles":["FileManager","File Path Generation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FileManager File Path Generation should generate complete file path","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should generate complete file path"},{"ancestorTitles":["FileManager","File Path Generation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager File Path Generation should include determined folder in path","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should include determined folder in path"},{"ancestorTitles":["FileManager","PDF File Path Generation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager PDF File Path Generation should generate PDF file path","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should generate PDF file path"},{"ancestorTitles":["FileManager","PDF File Path Generation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FileManager PDF File Path Generation should sanitize PDF title","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should sanitize PDF title"},{"ancestorTitles":["FileManager","PDF File Path Generation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager PDF File Path Generation should extract domain from PDF URL","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should extract domain from PDF URL"},{"ancestorTitles":["FileManager","GitHub Save Operations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FileManager GitHub Save Operations should save new file to GitHub","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should save new file to GitHub"},{"ancestorTitles":["FileManager","GitHub Save Operations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FileManager GitHub Save Operations should update existing file on GitHub","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update existing file on GitHub"},{"ancestorTitles":["FileManager","GitHub Save Operations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager GitHub Save Operations should handle GitHub API errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle GitHub API errors"},{"ancestorTitles":["FileManager","GitHub PDF Save Operations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FileManager GitHub PDF Save Operations should save PDF to GitHub","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should save PDF to GitHub"},{"ancestorTitles":["FileManager","Connection Testing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Connection Testing should test successful GitHub connection","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should test successful GitHub connection"},{"ancestorTitles":["FileManager","Connection Testing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Connection Testing should handle connection failures","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle connection failures"},{"ancestorTitles":["FileManager","Connection Testing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Connection Testing should handle network errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle network errors"},{"ancestorTitles":["FileManager","Repository Path Parsing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Repository Path Parsing should parse simple repository path","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should parse simple repository path"},{"ancestorTitles":["FileManager","Repository Path Parsing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Repository Path Parsing should parse GitHub URL","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should parse GitHub URL"},{"ancestorTitles":["FileManager","Repository Path Parsing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Repository Path Parsing should parse GitHub URL with .git suffix","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should parse GitHub URL with .git suffix"},{"ancestorTitles":["FileManager","Commit Message Generation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FileManager Commit Message Generation should generate descriptive commit messages","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should generate descriptive commit messages"}],"endTime":1759620655190,"message":"","name":"D:\\source\\PrismWeave\\cli\\tests\\file-manager.test.ts","startTime":1759620653573,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ConfigManager","Constructor and Load"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Constructor and Load should create new config if none exists","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create new config if none exists"},{"ancestorTitles":["ConfigManager","Constructor and Load"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Constructor and Load should load existing config","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should load existing config"},{"ancestorTitles":["ConfigManager","Constructor and Load"],"duration":39,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Constructor and Load should handle corrupted config file gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle corrupted config file gracefully"},{"ancestorTitles":["ConfigManager","Get and Set"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Get and Set should set and get config values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should set and get config values"},{"ancestorTitles":["ConfigManager","Get and Set"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Get and Set should return undefined for missing keys","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return undefined for missing keys"},{"ancestorTitles":["ConfigManager","Get and Set"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Get and Set should set multiple values","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should set multiple values"},{"ancestorTitles":["ConfigManager","Get and Set"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Get and Set should persist config to file","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should persist config to file"},{"ancestorTitles":["ConfigManager","GetAll and SetAll"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager GetAll and SetAll should get all config values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should get all config values"},{"ancestorTitles":["ConfigManager","GetAll and SetAll"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager GetAll and SetAll should set all config values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should set all config values"},{"ancestorTitles":["ConfigManager","GetAll and SetAll"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager GetAll and SetAll should replace existing config with setAll","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should replace existing config with setAll"},{"ancestorTitles":["ConfigManager","Has"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Has should return true for existing keys","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return true for existing keys"},{"ancestorTitles":["ConfigManager","Has"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Has should return false for missing keys","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false for missing keys"},{"ancestorTitles":["ConfigManager","Has"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Has should return false for undefined values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false for undefined values"},{"ancestorTitles":["ConfigManager","Validate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Validate should validate complete configuration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate complete configuration"},{"ancestorTitles":["ConfigManager","Validate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Validate should require githubToken","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should require githubToken"},{"ancestorTitles":["ConfigManager","Validate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Validate should require githubRepo","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should require githubRepo"},{"ancestorTitles":["ConfigManager","Validate"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Validate should validate repository format","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate repository format"},{"ancestorTitles":["ConfigManager","Validate"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Validate should accept valid repository formats","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should accept valid repository formats"},{"ancestorTitles":["ConfigManager","Validate"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Validate should return all validation errors","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return all validation errors"},{"ancestorTitles":["ConfigManager","File Operations"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager File Operations should create config directory if it does not exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create config directory if it does not exist"},{"ancestorTitles":["ConfigManager","File Operations"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager File Operations should handle save errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle save errors gracefully"},{"ancestorTitles":["ConfigManager","Type Safety"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Type Safety should handle different value types","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle different value types"},{"ancestorTitles":["ConfigManager","Type Safety"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigManager Type Safety should preserve value types in getAll","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should preserve value types in getAll"}],"endTime":1759620655272,"message":"","name":"D:\\source\\PrismWeave\\cli\\tests\\config.test.ts","startTime":1759620653569,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MarkdownConverterCore","Initialization"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Initialization should initialize successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should initialize successfully"},{"ancestorTitles":["MarkdownConverterCore","Initialization"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Initialization should initialize TurndownService","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should initialize TurndownService"},{"ancestorTitles":["MarkdownConverterCore","Basic HTML Conversion"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Basic HTML Conversion should convert simple HTML to markdown","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should convert simple HTML to markdown"},{"ancestorTitles":["MarkdownConverterCore","Basic HTML Conversion"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Basic HTML Conversion should convert headers","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should convert headers"},{"ancestorTitles":["MarkdownConverterCore","Basic HTML Conversion"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Basic HTML Conversion should convert bold text","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should convert bold text"},{"ancestorTitles":["MarkdownConverterCore","Basic HTML Conversion"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Basic HTML Conversion should convert italic text","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should convert italic text"},{"ancestorTitles":["MarkdownConverterCore","Basic HTML Conversion"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Basic HTML Conversion should convert links","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should convert links"},{"ancestorTitles":["MarkdownConverterCore","Basic HTML Conversion"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Basic HTML Conversion should convert images","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should convert images"},{"ancestorTitles":["MarkdownConverterCore","Complex HTML Structures"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Complex HTML Structures should convert unordered lists","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should convert unordered lists"},{"ancestorTitles":["MarkdownConverterCore","Complex HTML Structures"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Complex HTML Structures should convert ordered lists","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should convert ordered lists"},{"ancestorTitles":["MarkdownConverterCore","Complex HTML Structures"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Complex HTML Structures should convert code blocks","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should convert code blocks"},{"ancestorTitles":["MarkdownConverterCore","Complex HTML Structures"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Complex HTML Structures should convert inline code","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should convert inline code"},{"ancestorTitles":["MarkdownConverterCore","Complex HTML Structures"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Complex HTML Structures should convert blockquotes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should convert blockquotes"},{"ancestorTitles":["MarkdownConverterCore","Complex HTML Structures"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Complex HTML Structures should handle nested structures","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle nested structures"},{"ancestorTitles":["MarkdownConverterCore","Conversion Options"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Conversion Options should exclude images when includeImages is false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should exclude images when includeImages is false"},{"ancestorTitles":["MarkdownConverterCore","Conversion Options"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Conversion Options should exclude links when includeLinks is false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should exclude links when includeLinks is false"},{"ancestorTitles":["MarkdownConverterCore","Conversion Options"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Conversion Options should handle excludeSelectors option","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle excludeSelectors option"},{"ancestorTitles":["MarkdownConverterCore","Statistics Calculation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Statistics Calculation should count words correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should count words correctly"},{"ancestorTitles":["MarkdownConverterCore","Statistics Calculation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Statistics Calculation should count characters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should count characters"},{"ancestorTitles":["MarkdownConverterCore","Statistics Calculation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Statistics Calculation should count images","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should count images"},{"ancestorTitles":["MarkdownConverterCore","Statistics Calculation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Statistics Calculation should count links","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should count links"},{"ancestorTitles":["MarkdownConverterCore","Statistics Calculation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Statistics Calculation should handle empty content","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle empty content"},{"ancestorTitles":["MarkdownConverterCore","Special Characters and Entities"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Special Characters and Entities should handle HTML entities","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle HTML entities"},{"ancestorTitles":["MarkdownConverterCore","Special Characters and Entities"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Special Characters and Entities should handle special markdown characters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle special markdown characters"},{"ancestorTitles":["MarkdownConverterCore","Custom Rules"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Custom Rules should handle strikethrough","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle strikethrough"},{"ancestorTitles":["MarkdownConverterCore","Custom Rules"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Custom Rules should handle task lists","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle task lists"},{"ancestorTitles":["MarkdownConverterCore","Whitespace Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Whitespace Handling should normalize whitespace","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should normalize whitespace"},{"ancestorTitles":["MarkdownConverterCore","Whitespace Handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Whitespace Handling should handle line breaks","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle line breaks"},{"ancestorTitles":["MarkdownConverterCore","Whitespace Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Whitespace Handling should trim leading and trailing whitespace","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should trim leading and trailing whitespace"},{"ancestorTitles":["MarkdownConverterCore","Edge Cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Edge Cases should handle empty HTML","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty HTML"},{"ancestorTitles":["MarkdownConverterCore","Edge Cases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Edge Cases should handle HTML with only whitespace","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle HTML with only whitespace"},{"ancestorTitles":["MarkdownConverterCore","Edge Cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Edge Cases should handle deeply nested HTML","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle deeply nested HTML"},{"ancestorTitles":["MarkdownConverterCore","Edge Cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Edge Cases should handle invalid HTML gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle invalid HTML gracefully"},{"ancestorTitles":["MarkdownConverterCore","Edge Cases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Edge Cases should handle script and style tags","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle script and style tags"},{"ancestorTitles":["MarkdownConverterCore","Real-World HTML Structures"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Real-World HTML Structures should convert blog post structure","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should convert blog post structure"},{"ancestorTitles":["MarkdownConverterCore","Real-World HTML Structures"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Real-World HTML Structures should convert documentation page","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should convert documentation page"},{"ancestorTitles":["MarkdownConverterCore","Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MarkdownConverterCore Performance should handle large content efficiently","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle large content efficiently"}],"endTime":1759620655279,"message":"","name":"D:\\source\\PrismWeave\\cli\\tests\\markdown-converter.test.ts","startTime":1759620653574,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ContentExtractionCore","Metadata Extraction"],"duration":48,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Metadata Extraction should extract title from meta tags","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should extract title from meta tags"},{"ancestorTitles":["ContentExtractionCore","Metadata Extraction"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Metadata Extraction should fallback to document title","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should fallback to document title"},{"ancestorTitles":["ContentExtractionCore","Metadata Extraction"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Metadata Extraction should extract description","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should extract description"},{"ancestorTitles":["ContentExtractionCore","Metadata Extraction"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Metadata Extraction should extract author","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should extract author"},{"ancestorTitles":["ContentExtractionCore","Metadata Extraction"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Metadata Extraction should extract keywords","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should extract keywords"},{"ancestorTitles":["ContentExtractionCore","Metadata Extraction"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Metadata Extraction should calculate word count","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate word count"},{"ancestorTitles":["ContentExtractionCore","Metadata Extraction"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Metadata Extraction should estimate reading time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should estimate reading time"},{"ancestorTitles":["ContentExtractionCore","Metadata Extraction"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Metadata Extraction should extract language","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should extract language"},{"ancestorTitles":["ContentExtractionCore","Metadata Extraction"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Metadata Extraction should default to \"en\" for missing language","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should default to \"en\" for missing language"},{"ancestorTitles":["ContentExtractionCore","Image Extraction"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Image Extraction should extract images with absolute URLs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should extract images with absolute URLs"},{"ancestorTitles":["ContentExtractionCore","Image Extraction"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Image Extraction should convert relative URLs to absolute","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should convert relative URLs to absolute"},{"ancestorTitles":["ContentExtractionCore","Image Extraction"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Image Extraction should skip data URLs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should skip data URLs"},{"ancestorTitles":["ContentExtractionCore","Image Extraction"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Image Extraction should handle missing alt text","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle missing alt text"},{"ancestorTitles":["ContentExtractionCore","Page Structure Analysis"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Page Structure Analysis should extract heading structure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should extract heading structure"},{"ancestorTitles":["ContentExtractionCore","Page Structure Analysis"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Page Structure Analysis should count sections and paragraphs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should count sections and paragraphs"},{"ancestorTitles":["ContentExtractionCore","Content Quality Scoring"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Content Quality Scoring should score content based on length","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should score content based on length"},{"ancestorTitles":["ContentExtractionCore","Content Quality Scoring"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Content Quality Scoring should reward structured content","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reward structured content"},{"ancestorTitles":["ContentExtractionCore","Content Quality Scoring"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Content Quality Scoring should cap score at 100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should cap score at 100"},{"ancestorTitles":["ContentExtractionCore","Paywall Detection"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Paywall Detection should detect paywall by class name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect paywall by class name"},{"ancestorTitles":["ContentExtractionCore","Paywall Detection"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Paywall Detection should detect subscription requirement","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect subscription requirement"},{"ancestorTitles":["ContentExtractionCore","Paywall Detection"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Paywall Detection should return false when no paywall present","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false when no paywall present"},{"ancestorTitles":["ContentExtractionCore","Advanced Metadata Extraction"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Advanced Metadata Extraction should extract Open Graph metadata","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should extract Open Graph metadata"},{"ancestorTitles":["ContentExtractionCore","Advanced Metadata Extraction"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Advanced Metadata Extraction should extract Twitter Card metadata","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should extract Twitter Card metadata"},{"ancestorTitles":["ContentExtractionCore","Advanced Metadata Extraction"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Advanced Metadata Extraction should extract JSON-LD structured data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should extract JSON-LD structured data"},{"ancestorTitles":["ContentExtractionCore","Advanced Metadata Extraction"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Advanced Metadata Extraction should include page URL and domain","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include page URL and domain"},{"ancestorTitles":["ContentExtractionCore","Blog Detection"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Blog Detection should detect blog by URL pattern","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect blog by URL pattern"},{"ancestorTitles":["ContentExtractionCore","Blog Detection"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Blog Detection should detect blog by hostname","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect blog by hostname"},{"ancestorTitles":["ContentExtractionCore","Blog Detection"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Blog Detection should detect blog by DOM structure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect blog by DOM structure"},{"ancestorTitles":["ContentExtractionCore","Edge Cases"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Edge Cases should handle empty document","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty document"},{"ancestorTitles":["ContentExtractionCore","Edge Cases"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Edge Cases should handle document with only scripts and styles","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle document with only scripts and styles"},{"ancestorTitles":["ContentExtractionCore","Edge Cases"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"ContentExtractionCore Edge Cases should handle malformed HTML gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle malformed HTML gracefully"}],"endTime":1759620655947,"message":"","name":"D:\\source\\PrismWeave\\cli\\tests\\content-extraction.test.ts","startTime":1759620653565,"status":"passed","summary":""}],"wasInterrupted":false}
