// Generated by Copilot
// Example utility class showing simplified pattern for the new build system

// Simple interface definition
interface IExampleSettings {
  enabled: boolean;
  timeout: number;
  apiKey?: string;
}

// Standard class - no dual export pattern needed
class ExampleUtility {
  private _settings: IExampleSettings;

  constructor(settings: IExampleSettings) {
    this._settings = settings;
  }

  async processData(input: string): Promise<string> {
    try {
      // Implementation
      return this.transform(input);
    } catch (error) {
      console.error('ExampleUtility: Error processing data:', error);
      throw error;
    }
  }

  private transform(input: string): string {
    return input.trim().toLowerCase();
  }
}

// Simple export - esbuild will handle bundling
export { ExampleUtility };
export type { IExampleSettings };
