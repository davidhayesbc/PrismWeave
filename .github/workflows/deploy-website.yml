name: Deploy Website

# Deploy the PrismWeave website to GitHub Pages
on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_VERSION: '20'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Website
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Install root dependencies
        run: npm install
        
      - name: Install browser extension dependencies
        working-directory: browser-extension
        run: npm install
        
      - name: Build web deployment
        run: |
          echo "🔨 Building PrismWeave web deployment..."
          npm run build:web
          
      - name: Verify build outputs
        run: |
          echo "🔍 Verifying build outputs..."
          
          # Check that web build directory exists
          if [ ! -d "dist/web" ]; then
            echo "❌ dist/web directory not found"
            exit 1
          fi
          
          # Check for essential files
          if [ ! -f "dist/web/index.html" ]; then
            echo "❌ index.html not found"
            exit 1
          fi
          
          echo "📁 Web build contents:"
          find dist/web -type f -name "*.html" -o -name "*.js" -o -name "*.css" | head -20
          
          echo "✅ Build verification completed"
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist/web

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    name: Deploy to GitHub Pages
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Display deployment URL
        run: |
          echo "🚀 Website deployed successfully!"
          echo "📍 URL: ${{ steps.deployment.outputs.page_url }}"