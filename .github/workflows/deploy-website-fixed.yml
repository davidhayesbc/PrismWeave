name: Deploy Website

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-website:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install minimal dependencies
        run: |
          # Create a minimal package.json for the build
          cat > temp-package.json << 'EOF'
          {
            "name": "prismweave-website-build",
            "version": "1.0.0",
            "dependencies": {
              "esbuild": "^0.21.5"
            }
          }
          EOF
          
          # Install only esbuild for the web build
          npm install --package-lock-only esbuild
          
      - name: Build web components (minimal)
        run: |
          # Ensure directories exist
          mkdir -p dist/web
          mkdir -p dist/web/extension
          mkdir -p dist/web/bookmarklet
          
          # Copy existing built files if they exist
          if [ -d "browser-extension/dist" ]; then
            cp -r browser-extension/dist/* dist/web/extension/ || true
          fi
          
          # Generate website from template
          node -e "
          const fs = require('fs');
          const path = require('path');
          
          // Read template file
          const templatePath = '.github/templates/index.html';
          if (!fs.existsSync(templatePath)) {
            throw new Error('Template file not found: ' + templatePath);
          }
          
          let htmlContent = fs.readFileSync(templatePath, 'utf8');
          
          // Get version and build time
          const version = '1.0.0';
          const buildTime = new Date().toISOString();
          
          // Replace template variables
          htmlContent = htmlContent.replace(/{{VERSION}}/g, version);
          htmlContent = htmlContent.replace(/{{BUILD_TIME}}/g, buildTime.split('T')[0]);
          
          // Write the index file
          fs.writeFileSync('dist/web/index.html', htmlContent);
          
          console.log('âœ… Website generated successfully from template');
          "
          
      - name: Create additional website files
        run: |
          # Create bookmarklet directory and files
          mkdir -p dist/web/bookmarklet
          
          # Copy bookmarklet template
          if [ -f ".github/templates/bookmarklet.html" ]; then
            cp .github/templates/bookmarklet.html dist/web/bookmarklet/index.html
          else
            echo 'Bookmarklet page template not found' > dist/web/bookmarklet/index.html
          fi
          
          # Create extension directory with placeholder
          mkdir -p dist/web/extension
          echo 'Extension files will be available here after full build' > dist/web/extension/index.html
          
          # Create robots.txt
          if [ -f ".github/templates/robots.txt" ]; then
            cp .github/templates/robots.txt dist/web/robots.txt
          else
            echo 'User-agent: *' > dist/web/robots.txt
            echo 'Disallow:' >> dist/web/robots.txt
          fi
          
          # Copy sitemap.xml template
          if [ -f ".github/templates/sitemap.xml" ]; then
            cp .github/templates/sitemap.xml dist/web/sitemap.xml
          else
            echo 'Sitemap template not found' > dist/web/sitemap.txt
          fi
          
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist/web
          
  deploy:
    needs: build-website
    if: github.ref == 'refs/heads/main'
    
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
