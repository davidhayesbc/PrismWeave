# GitHub Actions workflow for VS Code Extension
# Handles ONNX Runtime cross-platform compatibility issues

name: VS Code Extension Build

on:
  push:
    branches: [ main, develop ]
    paths: [ 'vscode-extension/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'vscode-extension/**' ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'vscode-extension/package-lock.json'

    - name: Setup PowerShell (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        # Install PowerShell on Linux/macOS for install script
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https software-properties-common
          wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb"
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y powershell
        elif [[ "${{ runner.os }}" == "macOS" ]]; then
          brew install --cask powershell
        fi

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      working-directory: vscode-extension
      run: |
        Write-Host "Installing on Windows..." -ForegroundColor Green
        ./scripts/install.ps1 -Verbose

    - name: Install dependencies (Linux/macOS - Skip Optional)
      if: runner.os != 'Windows'
      shell: pwsh
      working-directory: vscode-extension
      run: |
        Write-Host "Installing on ${{ runner.os }} (skipping optional dependencies)..." -ForegroundColor Yellow
        ./scripts/install.ps1 -SkipOptional -Verbose

    - name: Run linting
      working-directory: vscode-extension
      run: npm run lint

    - name: Run tests
      working-directory: vscode-extension
      run: npm run test
      env:
        DISPLAY: ':99.0'

    - name: Package extension
      working-directory: vscode-extension
      run: npm run package

    - name: Upload extension artifact
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: vscode-extension
        path: vscode-extension/*.vsix

  compatibility-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: 'vscode-extension/package-lock.json'

    - name: Test ONNX Runtime Compatibility
      working-directory: vscode-extension
      run: |
        echo "Testing ONNX Runtime compatibility on Linux..."
        
        # Install main dependencies
        npm install --ignore-optional --audit=false --fund=false
        
        # Try to install ONNX Runtime
        echo "Attempting ONNX Runtime installation..."
        if npm install onnxruntime-node --save-optional --ignore-scripts --audit=false --fund=false; then
          echo "✅ ONNX Runtime installation succeeded"
          echo "ONNX_AVAILABLE=true" >> $GITHUB_ENV
        else
          echo "⚠️ ONNX Runtime installation failed (expected on Linux)"
          echo "ONNX_AVAILABLE=false" >> $GITHUB_ENV
        fi
        
        # Test compilation regardless of ONNX availability
        npm run compile
        echo "✅ TypeScript compilation successful"

    - name: Create compatibility report
      run: |
        echo "## ONNX Runtime Compatibility Report" >> $GITHUB_STEP_SUMMARY
        echo "| Platform | Node.js | ONNX Runtime | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|---------|--------------|---------|" >> $GITHUB_STEP_SUMMARY
        echo "| Linux | 20.x | ${{ env.ONNX_AVAILABLE }} | ✅ Extension builds successfully |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "The extension is designed to work with or without ONNX Runtime." >> $GITHUB_STEP_SUMMARY
        echo "When ONNX Runtime is not available, the extension falls back to external AI services." >> $GITHUB_STEP_SUMMARY
